openapi: 3.0.3
info:
  title: register-user-service - OpenAPI 3.0
  description: |-
    This is an API to create, get and delete users.
  contact:
    email: elileite9@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
tags:
  - name: user
    description: Operations about user
paths:
  /user:
    post:
      tags:
        - user
      summary: Create User
      description: Create a new User
      operationId: addUser
      requestBody:
        description: Create a new User in H2 Database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '405':
          description: Invalid input
  /user/findAllUsers:
    get:
      tags:
        - user
      summary: Find all Users
      description: Find all registered users in the database
      operationId: findAllUsers
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Invalid status value

  /user/{userId}:
    get:
      tags:
        - user
      summary: Find User by ID
      description: Return a single User
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          description: ID of User to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
    delete:
      tags:
        - user
      summary: Deletes a User
      description: Delete a User by ID
      operationId: deleteUserById
      parameters:
        - name: userId
          in: path
          description: User ID to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID User value
        '404':
          description: User not found

components:
  schemas:
    User:
      type: object
      properties:
        name:
          type: string
          example: Eli
        email:
          type: string
          example: 'elileite9@gmail.com'
        birthDate:
          type: string
          format: date-time
        address:
          type: string
        habilities:
          type: array
          items:
            type: string
            example: "play guitar"
